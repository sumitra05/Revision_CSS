1) how to add comments on css?

Ans. To comment in CSS, simply place your plain text inside \* */ marks. 
    This tells the browser that they are notes and should not be rendered on the front end.


2) Why do we use pseudo-class?

Ans. CSS pseudo-classes are used to add special effects to some selectors.
    Example-:       div:hover {
                        background-color: blue;
                    }


3) How is specificity applied?

Ans. If there are two or more CSS rules that point to the same element,
   the selector with the highest specificity value will "win",
   and its style declaration will be applied to that HTML element.

   The amount of specificity a selector has is measured using four different values (or components), 
   which can be thought of as thousands, hundreds, tens and ones — four single digits in four columns:

    1000 - Inline/Style Tag
    Hundreds - One for each ID Selector
    Tens - One for each class selector, attribute selector, pseudo-class contained inside the overall selector.
    Ones - One for each element selector, pseudo-element contained inside the overall selector.

Note: Universal selector (*), combinators (+, >, ~, ' ') and negation pseudo-class (:not) have no effect on specificity.


4) What method allows an element to be moved from its current position?

Ans. The translate() method moves an element from its current position (according to the parameters given for the X-axis and the Y-axis).
     Example-:   div {
                    width: 300px;
                    height: 100px;
                    background-color: yellow;
                    border: 1px solid black;
                    transform: translate(60px, 120px);
                }

    <p>The translate() method moves an element from its current position:</p>

    <div>
        This div element is moved 60 pixels to the right, and 120 pixels down from its current position.
    </div>


5) what properties does flex model have?

Ans. Properties for the parent (flex-container):
     => display
     => flex-direction
     => flex-wrap
     => flex-flow
     => justify-content
     => align-items
     => align-content
     => gap, row gap, column gap

    Properties for the children (flex-items);
    => order
    => flex-grow
    => flex-shrink
    => flex-basis
    => flex
    => align-self


6) What is the difference between flex and grids?

Ans. Grid is made for two-dimensional layout while Flexbox is for one.
     This means Flexbox can work on either row or columns at a time, but Grids can work on both.

    Major Uniqueness between Flexbox and Grids is that the flex works on content while the grid is based on the layout.
    CSS Grids helps you create the outer layout of the webpage. You can build complex as well responsive design with this.
    This is why it is called ‘layout first’. Flexbox mostly helps align content & move blocks.


7) Give an example where we have to use grids and where you have to use flexbox?

Ans. CSS grids are for 2D layouts. It works with both rows and columns.
     Flexbox works better in one dimension only (either rows OR columns).

     >> You should consider flexbox when :
        => You have a small design to implement
        => You need to align elements
        => You need a content-first design

    >> You should consider CSS grid when :
        => You have a complex design to implement
        => You need to have a gap between block elements
        => You need to overlap elements
        => You need a layout-first design

note : "CSS grid is for layout, Flexbox is for alignment"


8) Give an example where you cannot use flexbox, and you can only use grids?

Ans. Grid is usually used to make a more complex layout. You can build complex as well responsive design with this.
     It works with both rows and columns.Flexbox works better in one dimension only (either rows OR columns).

     If you have some complex layout as this wherein you want to layout in different ways basis the screen size; You'd rather use CSS grid over flex;
     for a simple one dimensional layout flexbox can be useful to help align content.


9) What are combinators? give examples of how you can use them?

Ans. Combinators combine two or more selectors so we can be more specific in our selection method.
 There are different types of combinators.
 => Type & Class (.);
 Syntax: 
        elemtype.class { style properties }

 => Multiple Selectors, Same Properties (,)
    The comma in a CSS selector separates multiple selectors within the same styles.
    Syntax: 
           div, p {
                padding: 10px;
                font-size: 20px;
                margin: 0;
            }

 => Adjacent Sibling Selector (+)
    Syntax:
          div + p {
             color: red;
          }

        .class1 + a {
            color: red;
        }

 => General Sibling Selector (~);
     Syntax:
           former_element ~ target_element { style properties }

 => Child Combinator (>)
    Syntax: 
           selector1 > selector2 { style properties }

 => Descendant Combinator ( )
    Syntax:
          selector1 selector2 { style properties };


10) What does object-fit do?

Ans. The CSS object-fit property is used to specify how an <img> or <video> should be resized to fit its container.
     This property tells the content to fill the container in a variety of ways;
     such as "preserve that aspect ratio" or "stretch up and take up as much space as possible".
    
    Syntax:
     => object-fit: fill;
     => object-fit: contain;
     => object-fit: cover;
     => fit: none;
     => object-fit: scale-down;


11) What does rotate do?

Ans. The transform property applies a 2D or 3D transformation to an element.
     This property allows you to rotate, scale, move, skew, etc., elements.

     Syntax: rotate()
        => transform: rotate(0);
        => transform: rotate(90deg);
        => transform: rotate(-0.25turn);
        => transform: rotate(3.142rad);



12) What rule can be used to define animations?

Ans. The @keyframes rule specifies the animation code.
     The animation is created by gradually changing from one set of CSS styles to another.
     During the animation, you can change the set of CSS styles many times.
     Specify when the style change will happen in percent, or with the keywords "from" and "to", 
     which is the same as 0% and 100%. 0% is the beginning of the animation, 100% is when the animation is complete.

     Syntax :
           @keyframes animationname {keyframes-selector {css-styles}};
     Example:   @keyframes mymove {
                    from {top: 0px;}
                    to {top: 200px;}
                }


13) When working with attribute selectors, how can you select elements which contain a particular attribute value?
Ans.  a[href*="en-US"] 
      selects an `a` tag which a particular href attribute value that has been asked.


14) What does @media do?
Ans. The @media rule is used in media queries to apply different styles for different media types/devices.
     Media queries can be used to check many things, such as:
        => width and height of the viewport
        => width and height of the device
        => orientation (is the tablet/phone in landscape or portrait mode?)
        => resolution

    Using media queries are a popular technique for delivering a tailored style sheet (responsive web design) to desktops, laptops, tablets, and mobile phones.
    we can also use media queries to specify that certain styles are only for printed documents or for screen readers (mediatype: print, screen, or speech).
    there are also media features;
    For example, we can apply styles to only those screens that are greater, or smaller, than a certain width.

Syntax:
        body {
           background-color: lightblue;
        }

        @media screen and (min-width: 400px) {
            body {
                background-color: lightgreen;
            }
        }

        @media screen and (min-width: 800px) {
            body {
                background-color: lavender;
            }
        }


15) What can be used to override properties of an element?
Ans. To override the CSS properties of a class, we can use the !important directive.
     In CSS, !important means “this is important”,
     The !important rule in CSS is used to add more importance to a property/value than normal.
     In fact, if you use the !important rule, it will override ALL previous styling rules for that specific property on that element!
     
     Example:- #myid {
                      background-color: blue;
                }

                .myclass {
                     background-color: gray;
                }

                p {
                    background-color: red !important;
                }

16) How can you select every alternate elements in a list of elements using css?
Ans. for the alternate elements we can use nth-child() property of css.
     Example:- HTML
               <ul>
                    <li>1</li>
                    <li>2</li>
                    <li>3</li>
                    <li>4</li>
                    <li>5</li>
    
                </ul>
    Example:- CSS
              ul{
                    list-style-type: none;
                    color: white;
              }

              li:nth-child(odd){
                  background-color:blue;
                }

                li:nth-of-type(even){
                     background-color:red;
                }


17) What is the ranking of selectors with respect to specificity?
Ans. Ranking from Low To High:-
        => element selector, pseudo element selector
        => class selector, attribute selector, pseudo-class contained inside the overall selector
        => id selector
        => inline styling

    Ranking from Low To High:-
        => 1000 - Inline/Style Tag
        => Hundreds - One for each ID Selector
        => Tens - One for each class selector, attribute selector, pseudo-class contained inside the overall selector.
        => Ones - One for each element selector, pseudo-element contained inside the overall selector.
note:  Universal selector (*), combinators (+, >, ~, ' ') and negation pseudo-class (:not) have no effect on specificity.



18) how can we apply same styles to multiple selectors?
Ans.for apply same styles to multiple selectors we can use commas to separate multiple grouped selectors in the style;
Example:- div,p{
            color: red;
          }

19) What are the differences between relative and absolute in CSS?
Ans. position: relative places an element relative to its current position without changing the layout around it, 
     whereas position: absolute places an element relative to its parent's position and changing the layout around it.